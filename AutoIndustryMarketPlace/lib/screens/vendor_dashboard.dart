import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:auto_industry/provider/auth_provider.dart';
import 'package:auto_industry/services/api_service.dart';
import 'package:auto_industry/services/websocket_service.dart';
import 'package:auto_industry/models/part.dart';

class VendorDashboard extends StatefulWidget {
  const VendorDashboard({super.key});

  @override
  State<VendorDashboard> createState() => _VendorDashboardState();
}

class _VendorDashboardState extends State<VendorDashboard> {
  final _nameController = TextEditingController();
  final _categoryController = TextEditingController();
  final _priceController = TextEditingController();
  final _stockController = TextEditingController();
  List<Part> _parts = [];
  late WebSocketService _wsService;
  late Stream<dynamic> _wsStream;

  @override
  void initState() {
    super.initState();
    _wsService = WebSocketService();
    _wsStream = _wsService.connect();
    _wsService.subscribeToTopic('/topic/inventory');
    _wsStream.listen((data) {
      final json = jsonDecode(data);
      if (json['type'] == 'part') {
        setState(() => _parts = (json['data'] as List).map((p) => Part.fromJson(p)).toList());
      }
    });
    _loadParts();
  }

  Future<void> _loadParts() async {
    final api = ApiService();
    _parts = await api.getParts();
    setState(() {});
  }

  @override
  void dispose() {
    _wsService.disconnect();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final auth = Provider.of<AuthProvider>(context);
    return Scaffold(
      appBar: AppBar(
        title: const Text('Vendor Dashboard'),
        actions: [
          IconButton(
            icon: const Icon(Icons.logout),
            onPressed: () => auth.logout(context),
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          children: [
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Column(
                children: [
                  const Text('Add Spare Part'),
                  TextField(controller: _nameController, decoration: const InputDecoration(labelText: 'Name')),
                  TextField(controller: _categoryController, decoration: const InputDecoration(labelText: 'Category')),
                  TextField(controller: _priceController, decoration: const InputDecoration(labelText: 'Price'), keyboardType: TextInputType.number),
                  TextField(controller: _stockController, decoration: const InputDecoration(labelText: 'Stock'), keyboardType: TextInputType.number),
                  ElevatedButton(
                    onPressed: () async {
                      final part = Part(
                        id: '', // Generated by backend
                        name: _nameController.text,
                        category: _categoryController.text,
                        price: double.parse(_priceController.text),
                        stock: int.parse(_stockController.text),
                      );
                      final api = ApiService();
                      await api.addPart(part);
                      // Clear fields
                      _nameController.clear();
                      _categoryController.clear();
                      _priceController.clear();
                      _stockController.clear();
                      // Reload parts
                      _loadParts();
                    },
                    child: const Text('Add'),
                  ),
                ],
              ),
            ),
            const Text('Current Inventory (with live updates)'),
            ListView.builder(
              shrinkWrap: true,
              itemCount: _parts.length,
              itemBuilder: (context, index) {
                final part = _parts[index];
                return ListTile(
                  title: Text(part.name),
                  subtitle: Text('Category: ${part.category} - Price: \$${part.price} - Stock: ${part.stock}'),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}